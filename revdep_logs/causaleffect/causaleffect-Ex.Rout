
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "causaleffect"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "causaleffect-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('causaleffect')
Warning: replacing previous import by ‘igraph::pa’ when loading ‘causaleffect’
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("causal.effect")
> ### * causal.effect
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: causal.effect
> ### Title: Identify a causal effect
> ### Aliases: causal.effect
> 
> ### ** Examples
> 
> library(igraph)

Attaching package: ‘igraph’

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

> 
> # simplify = FALSE to allow multiple edges
> g <- graph.formula(X -+ Y, Z -+ X, Z -+ Y , X -+ Z, Z -+ X, simplify = FALSE) 
> 
> # Here the bidirected edge between X and Z is set to be unobserved in graph g
> # This is denoted by giving them a description attribute with the value "U"
> # The edges in question are the fourth and the fifth edge
> g <- set.edge.attribute(graph = g, name = "description", index = c(4,5), value = "U") 
> 
> res <- causal.effect(y = "Y", x = "X", G = g)
Error in simple_es_index(x, ii) : Unknown edge selected
Calls: causal.effect ... as.igraph.es -> inherits -> [ -> [.igraph.es -> simple_es_index
Execution halted
